knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggpubr")
library("optparse")
library("ggplot2")
library("reshape")
require("gridExtra")
library("ggpubr")
library("ggExtra")
library("sqldf")
library("ggmap")
# Data input (listings.csv)
listings <- read.csv("dataset/listings.csv",
header=TRUE)
# Remotion of $ and , characters
listings$price = gsub("\\$", "", listings$price)
listings$price = gsub(",", "", listings$price)
listings$price = as.numeric(listings$price)
theme_set(theme_classic())
# Boxplot availability_30 vs price
boxplot_availability_30 <- ggplot(listings,
aes(y = availability_30,
x = price,
colour = price)) +
geom_count(position = "jitter") +
geom_smooth(method = "lm") +
labs(y = "Availability",
x = "Price ($)",
title = "Days available the next 30 days") +
theme(legend.position = "none",
title = element_text(size = 9))
boxplot_availability_30 <- ggMarginal(boxplot_availability_30,
type = "histogram",
fill = "transparent")
# Final Plot
final_plot <- ggarrange(boxplot_availability_30,
boxplot_availability_60,
boxplot_availability_90,
boxplot_availability_365,
ncol = 2, nrow = 2)
# Boxplot availability_60 vs price
boxplot_availability_60 <- ggplot(listings,
aes(y = availability_60,
x = price,
colour = price)) +
geom_count(position = "jitter") +
geom_smooth(method = "lm") +
labs(y = "Availability",
x = "Price ($)",
title = "Days available the next 60 days") +
theme(legend.position = "none",
title = element_text(size = 9))
boxplot_availability_60 <- ggMarginal(boxplot_availability_60,
type = "histogram",
fill = "transparent")
# Boxplot availability_90 vs price
boxplot_availability_90 <- ggplot(listings,
aes(y = availability_90,
x = price,
colour = price)) +
geom_count(position = "jitter") +
geom_smooth(method = "lm") +
labs(y = "Availability",
x = "Price ($)",
title = "Days available the next 90 days") +
theme(legend.position = "none",
title = element_text(size = 9))
boxplot_availability_90 <- ggMarginal(boxplot_availability_90,
type = "histogram",
fill = "transparent")
theme_set(theme_classic())
# Boxplot availability_30 vs price
boxplot_availability_30 <- ggplot(listings,
aes(y = availability_30,
x = price,
colour = price)) +
geom_count(position = "jitter") +
geom_smooth(method = "lm") +
labs(y = "Availability",
x = "Price ($)",
title = "Days available the next 30 days") +
theme(legend.position = "none",
title = element_text(size = 9))
boxplot_availability_30 <- ggMarginal(boxplot_availability_30,
type = "histogram",
fill = "transparent")
# Boxplot availability_60 vs price
boxplot_availability_60 <- ggplot(listings,
aes(y = availability_60,
x = price,
colour = price)) +
geom_count(position = "jitter") +
geom_smooth(method = "lm") +
labs(y = "Availability",
x = "Price ($)",
title = "Days available the next 60 days") +
theme(legend.position = "none",
title = element_text(size = 9))
boxplot_availability_60 <- ggMarginal(boxplot_availability_60,
type = "histogram",
fill = "transparent")
# Boxplot availability_90 vs price
boxplot_availability_90 <- ggplot(listings,
aes(y = availability_90,
x = price,
colour = price)) +
geom_count(position = "jitter") +
geom_smooth(method = "lm") +
labs(y = "Availability",
x = "Price ($)",
title = "Days available the next 90 days") +
theme(legend.position = "none",
title = element_text(size = 9))
boxplot_availability_90 <- ggMarginal(boxplot_availability_90,
type = "histogram",
fill = "transparent")
# Boxplot availability_60 vs price
boxplot_availability_60 <- ggplot(listings,
aes(y = availability_60,
x = price,
colour = price)) +
geom_count(position = "jitter") +
geom_smooth(method = "lm") +
labs(y = "Availability",
x = "Price ($)",
title = "Days available the next 60 days") +
theme(legend.position = "none",
title = element_text(size = 9))
boxplot_availability_60 <- ggMarginal(boxplot_availability_60,
type = "histogram",
fill = "transparent")
# Boxplot availability_365 vs price
boxplot_availability_365 <- ggplot(listings,
aes(y = availability_365,
x = price,
colour = price)) +
geom_count(position = "jitter") +
geom_smooth(method = "lm") +
labs(y = "Availability",
x = "Price ($)",
title = "Days available the next 365 days") +
theme(legend.position = "none",
title = element_text(size = 9))
boxplot_availability_365 <- ggMarginal(boxplot_availability_365,
type = "histogram",
fill = "transparent")
# Final Plot
final_plot <- ggarrange(boxplot_availability_30,
boxplot_availability_60,
boxplot_availability_90,
boxplot_availability_365,
ncol = 2, nrow = 2)
final_plot
ggsave("./final_plot_1.svg")
boxplot_bed_type
# Boxplot contrasting price and bed_type
# P-value groups
p_value <- list(c("Airbed", "Couch"),
c("Airbed", "Futon"),
c("Airbed", "Pull-out Sofa"),
c("Airbed", "Real Bed"),
c("Couch", "Futon"),
c("Couch", "Pull-out Sofa"),
c("Couch", "Real Bed"),
c("Futon", "Pull-out Sofa"),
c("Futon", "Real Bed"),
c("Pull-out Sofa", "Real Bed"))
# Colors
colors <- c("blue",
"orange",
"red",
"darkgreen",
"violet")
theme_set(theme_bw())
#
boxplot_bed_type <- ggplot(listings,
aes(x = bed_type,
y = price)) +
geom_boxplot(aes(color = bed_type)) +
labs(x="Bed type",
y="Price ($)") +
theme(legend.position = "none") +
scale_color_manual(values = colors) +
stat_compare_means(comparisons = p_value,
method = "wilcox.test",
size = 2)
boxplot_bed_type
# Map contrasting price and bed_type
map_bed_type <- qmplot(longitude,
latitude,
data = listings,
maptype = "toner-lite",
color = price,
size = I(0)) +
scale_color_gradient(low = "blue",
high = "red") +
theme(legend.position = "bottom") +
facet_grid(~ bed_type)
map_bed_type
# Map contrasting price and bed_type
map_bed_type <- qmplot(longitude,
latitude,
data = listings,
maptype = "toner-lite",
color = price,
size = I(0)) +
scale_color_gradient(low = "blue",
high = "red") +
theme(legend.position = "bottom") +
facet_grid(~ bed_type)
map_bed_type
ggsave("./map_bed_type.svg")
# Boxplot contrasting price and bed_type
# P-value groups
p_value <- list(c("Airbed", "Couch"),
c("Airbed", "Futon"),
c("Airbed", "Pull-out Sofa"),
c("Airbed", "Real Bed"),
c("Couch", "Futon"),
c("Couch", "Pull-out Sofa"),
c("Couch", "Real Bed"),
c("Futon", "Pull-out Sofa"),
c("Futon", "Real Bed"),
c("Pull-out Sofa", "Real Bed"))
# Colors
colors <- c("blue",
"orange",
"red",
"darkgreen",
"violet")
theme_set(theme_bw())
#
boxplot_bed_type <- ggplot(listings,
aes(x = bed_type,
y = price)) +
geom_boxplot(aes(color = bed_type)) +
labs(x="Bed type",
y="Price ($)") +
theme(legend.position = "none") +
scale_color_manual(values = colors) +
stat_compare_means(comparisons = p_value,
method = "wilcox.test",
size = 2)
boxplot_bed_type
ggsave("./boxplot_bed_type.svg")
